{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handlechange","type","onChange","App","state","searchField","fetch","then","respone","json","users","setState","catch","error","console","log","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,MAAO,SAACC,GACjB,OACA,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACxB,6BAAKL,EAAMI,QAAQE,OACnB,kCAAKN,EAAMI,QAAQG,MAAnB,YCHKC,G,MAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KACZ,SAAAN,GAAO,OACN,cAAE,EAAF,CAAwBA,QAAWA,GAAvBA,EAAQC,WCNpBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAYC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAY,SACZa,KAAO,SACPF,YAAgBA,EAChBG,SAAWF,MCoCJG,G,wDApCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALJ,E,gEASO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,OACvCE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,c,+BAGrB,IAAD,SAE2BC,KAAKZ,MAA9BR,EAFF,EAEEA,SAASS,EAFX,EAEWA,YACXY,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAGlD,OACE,sBAAK/B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEW,YAAc,kBACdC,aAAgB,SAAAqB,GAAC,OAAI,EAAKV,SAAS,CAACN,YAAagB,EAAEC,OAAOC,WAE5D,cAAC,EAAD,CAAU3B,SAAYqB,W,GA/BZO,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5be8cda7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n    <div className = 'card-container'>\r\n        <img alt = 'monster' src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h1>{props.monster.name}</h1>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n        {props.monsters.map(\r\n            monster => \r\n             < Card key={monster.id} monster = {monster}/>\r\n        )}\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder,handlechange }) => (\r\n    <input\r\n        className = 'search'\r\n        type = 'search' \r\n        placeholder =  {placeholder} \r\n        onChange= {handlechange}\r\n    />\r\n);","import React , { Component } from 'react';\n\nimport { CardList } from './component/card-list/card-list.component';\n\nimport { SearchBox } from './component/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super ();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(respone => respone.json())\n    .then(users => this.setState({monsters: users}))\n    .catch(error => console.log('error'));\n  }\n\n  render(){\n    \n    const { monsters,searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    \n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox \n          placeholder = 'search monsters'\n          handlechange = {e => this.setState({searchField: e.target.value})}\n        />\n        <CardList monsters = {filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}